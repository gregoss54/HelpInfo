<Window
    x:Class="ClassGetMSReferences.Views.WPFParametresView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
    xmlns:cuilv="clr-namespace:ClassUILibrary.Views;assembly=ClassUILibrary"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="https://github.com/fantasticfiasco/mvvm-dialogs"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ignore="http://www.galasoft.ch/ignore"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tmpConv="clr-namespace:ClassGetMSUI.Views;assembly=ClassGetMSUI"
    xmlns:vm="clr-namespace:ClassGetMSReferences.ViewModel"
    x:Name="WPFParametresXaml"
    Title="{Binding Path=title}"
    Width="1180"
    Height="950"
    MinWidth="1200"
    MinHeight="950"
    MaxWidth="1920"
    MaxHeight="1080"
    dialogs:DialogServiceViews.IsRegistered="True"
    Icon="pack://application:,,,/ClassGetMSReferences;component/Ressources/Proget16.ico"
    ResizeMode="CanResize"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />
            <BooleanToVisibilityConverter x:Key="Converter" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <Binding Path="WPFParametresView" Source="{StaticResource Locator}" />
    </Window.DataContext>

    <i:Interaction.Behaviors>
        <cuilv:WindowCloseBehavior Close="{Binding Close}" />
    </i:Interaction.Behaviors>
    <!--  Déclenche la fonction qui va charger tous les éléments nécessaire au bon fonctionnement de la page  -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid
        MinWidth="1000"
        MinHeight="800"
        MaxWidth="1400"
        MaxHeight="1000"
        Margin="16,19,17,0"
        VerticalAlignment="Top"
        Background="Transparent">
        <!--  Structure de la page  -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="1040*" />
            <ColumnDefinition Width="9*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="70*" />
            <RowDefinition Height="61*" />
            <RowDefinition Height="529*" />
            <RowDefinition Height="90" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            Width="595"
            Height="495"
            Margin="5,5,5,5"
            HorizontalAlignment="Left"
            VerticalAlignment="Top" />
        <!--  Bouton aide PDF  -->
        <Label
            Name="LbAide"
            Grid.Column="1"
            Height="37"
            Margin="1005,0,5,2"
            VerticalAlignment="Bottom"
            HorizontalContentAlignment="Right"
            VerticalContentAlignment="Stretch"
            Content="?"
            Cursor="Hand"
            FontSize="22"
            FontWeight="Bold"
            RenderTransformOrigin="-1.25,0.242">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <cmd:EventToCommand Command="{Binding AideCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Label.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold">Obtenir de l'aide</TextBlock>
                        <TextBlock>Ouvrir le document d'aide.</TextBlock>
                    </StackPanel>
                </ToolTip>
            </Label.ToolTip>
        </Label>
        <!--  Déclaration de la listview  -->
        <ListView
            x:Name="ListeViewParamOfficiels"
            Grid.Row="2"
            Grid.Column="1"
            Grid.ColumnSpan="2"
            Margin="5,4,4,5"
            ItemsSource="{Binding ListeViewParamOfficiels}"
            SelectedItem="{Binding SelectedParamOfficiel}"
            SelectionMode="Single">
            <!--  Déclenche la fonction qui va permettre de modifier un param en double cliquant dessus dans la listview  -->
            <i:Interaction.Triggers>
                <!--<i:EventTrigger EventName="MouseDoubleClick">
                    <cmd:EventToCommand
                        Command="{Binding DataContext.ListeDblClickVersModif, RelativeSource={RelativeSource AncestorType=Window}}"
                         CommandParameter="{Binding ElementName=ListViewParamOfficiels, Path=SelectedItem}"
                        IsEnabled="{Binding boolDroitModif}" />
                </i:EventTrigger>-->
            </i:Interaction.Triggers>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <!--  Pour ne pas deplacer les colonnes  -->
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="TextElement.Foreground" Value="Black" />
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Width="160">
                        <GridViewColumnHeader
                            x:Name="txtNom"
                            Width="auto"
                            Content="Nom" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Width="auto"
                                    FontWeight="Bold"
                                    Text="{Binding Nom}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="60">
                        <GridViewColumnHeader
                            x:Name="ListType"
                            Width="auto"
                            Content="Type" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Width="auto"
                                    FontWeight="Bold"
                                    Text="{Binding Type}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="60">
                        <GridViewColumnHeader
                            x:Name="txtValeur"
                            Width="auto"
                            Content="Valeur" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Width="auto"
                                    FontWeight="Bold"
                                    Text="{Binding Valeur}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="500">
                        <GridViewColumnHeader x:Name="Commentaires" Content="Commentaires" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Width="auto"
                                    FontWeight="Bold"
                                    Text="{Binding Commentaire}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="60">
                        <GridViewColumnHeader x:Name="Base" Content="Base" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    Name="CbxBase"
                                    FontWeight="Bold"
                                    IsChecked="{Binding Base}"
                                    IsEnabled="False" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="150">
                        <GridViewColumnHeader x:Name="DateEntréeVigueur" Content="DateEntréeVigueur" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Width="auto"
                                    FontWeight="Bold"
                                    Text="{Binding DateEntréeVigueur}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="auto">
                        <GridViewColumnHeader
                            x:Name="Obligatoire"
                            Width="60"
                            Content="Obligatoire" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    Name="CbxObligatoire"
                                    FontWeight="Bold"
                                    IsChecked="{Binding Obligatoire}"
                                    IsEnabled="False" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="auto">
                        <GridViewColumnHeader
                            x:Name="Supprimer"
                            Width="60"
                            Content="Supprimer" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    x:Name="CbxSupprimerLV"
                                    FontWeight="Bold"
                                    IsChecked="{Binding Supprimer}"
                                    IsEnabled="False" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>

        </ListView>
        <!--  Checkbox "Afficher tous les éléments"  -->
        <CheckBox
            Name="CbxAfficherTout"
            Grid.Row="3"
            Grid.Column="1"
            Height="49"
            Margin="1,10,949,0"
            VerticalAlignment="Top"
            Command="{Binding CbxAfficherTout, Mode=TwoWay}"
            Content="Afficher tous les éléments"
            IsEnabled="{Binding boolDroitModif}"
            ToolTip="Afficher tous les éléments" />

        <!--  A l'afffichage de la fenetre parametres Etablissement l'element Check box apparait avec un boolean  -->
        <CheckBox
            Name="CbkOnlyPerso"
            Grid.Row="1"
            Grid.Column="1"
            Width="280"
            Height="18"
            Margin="145,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Afficher uniquement les paramètres personnels"
            IsChecked="{Binding CbxChecked}"
            Visibility="Hidden">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Checked">
                    <cmd:EventToCommand Command="{Binding CbkOnlyPerso}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="Unchecked">
                    <cmd:EventToCommand Command="{Binding CbkOnlyPersoUnchecked}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </CheckBox>

        <!--  A l'afffichage de la fenetre parametres agents l'element ComboBox apparait avec un boolean  -->
        <ComboBox
            Name="CBoxAgent"
            Grid.Row="1"
            Grid.Column="1"
            Height="32"
            Margin="125,3,0,0"
            VerticalAlignment="Top"
            Visibility="Hidden" />
        <!--  Label Titre  -->
        <Label
            Grid.Row="0"
            Grid.Column="1"
            Margin="460,10,449,13"
            Content="{Binding title}"
            FontSize="20"
            FontWeight="Bold" />
        <!--  StackPanel regroupant mes 4 boutons  -->
        <StackPanel
            Grid.Row="3"
            Grid.Column="1"
            Width="530"
            Margin="300,20,0,12"
            HorizontalAlignment="Left">
            <!--  Bouton ajouter  -->
            <Button
                Width="90"
                Height="50"
                Margin="44,0,0,60"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Center"
                Background="SteelBlue"
                Command="{Binding AjouterCommand}"
                CommandParameter="{Binding SelectedParamOfficiel}"
                Content="Ajouter"
                Cursor="Hand"
                Foreground="#FFF7EBEB"
                IsEnabled="{Binding boolDroitCT}"
                RenderTransformOrigin="0.231,1.75" />
            <!--  Bouton modifier  -->
            <Button
                Width="90"
                Height="50"
                Margin="170,-110,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="SteelBlue"
                Command="{Binding ModifierCommand}"
                CommandParameter="{Binding SelectedParamOfficiel}"
                Content="Modifier"
                Cursor="Hand"
                Foreground="#FFF7EBEB"
                IsEnabled="{Binding boolDroitCT}"
                KeyboardNavigation.TabIndex="6"
                RenderTransformOrigin="1.467,0.44" />
            <!--  Bouton Supprimer  -->
            <Button
                Width="90"
                Height="50"
                Margin="0,-110,154,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Background="SteelBlue"
                Command="{Binding SupprimerCommand}"
                CommandParameter="{Binding SelectedParamOfficiel}"
                Content="Supprimer"
                Cursor="Hand"
                Foreground="#FFF7EBEB"
                IsEnabled="{Binding boolDroitCT}"
                KeyboardNavigation.TabIndex="6"
                RenderTransformOrigin="1.067,1.7" />
            <!--  Bouton quitter  -->
            <Button
                x:Name="BtnQuitter"
                Width="90"
                Height="50"
                Margin="0,-110,25,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Background="SteelBlue"
                Command="{Binding QuitterCommand}"
                CommandParameter="{Binding ElementName=WPFParametresXaml}"
                Content="Quitter"
                Cursor="Hand"
                Foreground="#FFF7EBEB"
                KeyboardNavigation.TabIndex="3"
                RenderTransformOrigin="-1.781,0.3" />

        </StackPanel>
    </Grid>
</Window>
